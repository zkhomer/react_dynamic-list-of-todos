{"version":3,"sources":["components/TodoList/TodoList.jsx","components/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","getUserId","selectByTitle","selectByComplete","choosedByComplete","todolist","filter","todo","completed","className","type","placeholder","onChange","event","target","value","map","key","id","readOnly","title","onClick","userId","getTodos","a","fetch","response","json","then","result","data","getUser","CurrentUser","state","user","this","props","setState","prevProps","name","email","phone","React","Component","App","filteredTodos","selectedUserId","text","toLowerCase","includes","option","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb840c42.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  getUserId,\n  selectByTitle,\n  selectByComplete,\n  choosedByComplete,\n}) => {\n  const todolist = todos.filter((todo) => {\n    switch (choosedByComplete) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter a name\"\n        onChange={(event) => {\n          selectByTitle(event.target.value);\n        }}\n      />\n      <select\n        value={choosedByComplete}\n        onChange={(event) => {\n          selectByComplete(event.target.value);\n        }}\n      >\n        <option\n          value=\"all\"\n        >\n          All\n        </option>\n\n        <option\n          value=\"active\"\n        >\n          Active\n        </option>\n\n        <option\n          value=\"completed\"\n        >\n          Completed\n        </option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todolist.map(todo => (\n            <li\n              key={todo.id}\n              className={`TodoList__item TodoList__item--${todo.completed\n                ? 'checked' : 'unchecked'}`}\n            >\n              <label>\n                <input type=\"checkbox\" readOnly />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n                type=\"button\"\n                onClick={() => {\n                  getUserId(todo.userId);\n                }}\n              >\n                {`User# ${todo.userId}`}\n              </button>\n            </li>\n          ))}\n\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getUserId: PropTypes.func.isRequired,\n  selectByTitle: PropTypes.func.isRequired,\n  selectByComplete: PropTypes.func.isRequired,\n  choosedByComplete: PropTypes.string.isRequired,\n};\n","const API_TODOS_URL = 'https://mate-api.herokuapp.com/todos';\nconst API_USER_URL = 'https://mate-api.herokuapp.com/users/';\n\nexport const getTodos = async() => {\n  const response = await fetch(API_TODOS_URL);\n\n  return response.json()\n    .then(result => result.data)\n    .then(todos => todos.filter(todo => todo.title && todo.userId));\n};\n\nexport const getUser = async(userId) => {\n  const response = await fetch(`${API_USER_URL}${userId}`);\n\n  return response.json()\n    .then(result => result.data);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId === this.props.userId) {\n      return;\n    }\n\n    getUser(this.props.userId)\n      .then((user) => {\n        this.setState({ user });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return !user\n      ? 'Not info about user'\n      : (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>{`Selected user: ${user.id}`}</span>\n          </h2>\n\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ user: null });\n            }}\n          >\n            Clear\n          </button>\n        </div>\n      );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    selectedUserId: 0,\n    choosedByComplete: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos,\n          filteredTodos: todos,\n        });\n      });\n  }\n\n  getUserId = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  selectByTitle = (text) => {\n    this.setState(state => ({\n      filteredTodos: state.todos\n        .filter(todo => todo.title.toLowerCase()\n          .includes(text.toLowerCase())),\n    }));\n  }\n\n  selectByComplete = (option) => {\n    this.setState({ choosedByComplete: option });\n  }\n\n  render() {\n    const { filteredTodos, selectedUserId, choosedByComplete } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={filteredTodos}\n            getUserId={this.getUserId}\n            selectByTitle={this.selectByTitle}\n            selectByComplete={this.selectByComplete}\n            choosedByComplete={choosedByComplete}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}